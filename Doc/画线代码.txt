
    public void drawLineArrow(Canvas canvas, int color, int fromX, int fromY, int toX, int toY) {

        double headlen = 0.2 * 1.41 * Math.sqrt((fromX - toX) * (fromX - toX) + (fromY - toY) * (fromY - toY));//箭头头部长度

        headlen = headlen > 160 ? 160 : headlen;//40是箭头头部最大值

        double theta = 30;//自定义箭头线与直线的夹角

        double arrowX, arrowY;//箭头线终点坐标

        // 计算各角度和对应的箭头终点坐标

        double angle = Math.atan2(fromY - toY, fromX - toX) * 180 / Math.PI;

        double angle1 = (angle + theta) * Math.PI / 180;

        double angle2 = (angle - theta) * Math.PI / 180;

        double topX = headlen * Math.cos(angle1);

        double topY = headlen * Math.sin(angle1);

        double botX = headlen * Math.cos(angle2);

        double botY = headlen * Math.sin(angle2);

        boolean toLeft = fromX > toX;

        boolean toUp = fromY > toY;

        //箭头最上点

        arrowX = toX + topX;

        arrowY = toY + topY;

        //箭头下拐点

        double arrowX1 = toX + botX;

        double arrowY1 = toY + botY;

        //箭头上拐点

        double arrowX2 = toUp ? arrowX + 0.25 * Math.abs(arrowX1 - arrowX) : arrowX - 0.25 * Math.abs(arrowX1 - arrowX);

        double arrowY2 = toLeft ? arrowY - 0.25 * Math.abs(arrowY1 - arrowY) : arrowY + 0.25 * Math.abs(arrowY1 - arrowY);

        //箭头最下点

        double arrowX3 = toUp ? arrowX + 0.75 * Math.abs(arrowX1 - arrowX) : arrowX - 0.75 * Math.abs(arrowX1 - arrowX);

        double arrowY3 = toLeft ? arrowY - 0.75 * Math.abs(arrowY1 - arrowY) : arrowY + 0.75 * Math.abs(arrowY1 - arrowY);


        Path path = new Path();
        path.moveTo(fromX, fromY);
        path.lineTo((float) arrowX2, (float) arrowY2);
        path.lineTo((float) arrowX, (float) arrowY);
        path.lineTo((float) toX, (float) toY);
        path.lineTo((float) arrowX1, (float) arrowY1);
        path.lineTo((float) arrowX3, (float) arrowY3);
        path.lineTo((float) fromX, (float) fromY);

        Paint paint = new Paint();
        paint.setColor(color);

        canvas.drawPath(path, paint);
    }
